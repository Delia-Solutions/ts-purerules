{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["function mustNotBeNull(value: any): boolean {\n  return value !== null;\n}\n\nfunction mustNotBeUndefined(value: any): boolean {\n  return value !== undefined;\n}\n\nfunction mustNotBeNullOrUndefined(value: any): boolean {\n  return mustNotBeNull(value) && mustNotBeUndefined(value);\n}\n\nfunction arrayMustNotBeEmpty(value: Array<any>): boolean {\n  return (Array\n    .from(value)\n    .filter(elt => elt !== undefined)\n    .length) > 0;\n}\n\nfunction stringMustBeValidEmail(value: string): boolean {\n  /* This regex comes from\n     http://emailregex.com/\n     It matches 99.99% of MODERN email addresses.\n  */\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(value);\n}\n\nfunction numberMustBeMin(value: number, minValue: number): boolean {\n  return value >= minValue;\n}\n\nfunction numberMustBeMax(value: number, maxValue: number): boolean {\n  return maxValue >= value;\n}\n\nfunction numberMustBeStrictlyMin(value: number, minValue: number): boolean {\n  return value > minValue;\n}\nfunction numberMustBeStrictlyMax(value: number, maxValue: number): boolean {\n  return maxValue > value;\n}\n\nfunction objectMustNotBeEmpty(value: any): boolean {\n  const keys = Object.keys(value);\n  return value.toString() === '[object Object]' && keys.length !== 0;\n}\n\nfunction stringMustBeAtLeastNCharacters(value: string, length: number): boolean {\n  return value.length >= length;\n}\n\nfunction stringMustBeSimilarTo(value: string, other: string): boolean {\n  return value === other;\n}\n\nfunction stringMustBeDifferentTo(value: string, other: string): boolean {\n  return value !== other;\n}\n\nfunction stringMustNotBeEmpty(value: string): boolean {\n  return value !== '';\n}\n\nfunction stringMustContainWords(value: string, words: string | Array<string>): boolean {\n  if (Array.isArray(words)) {\n    return words.every(v => value.includes(v));\n  }\n  return value.includes(words);\n}\n\nfunction isLeapYear(year: string | number): boolean {\n  // if year is a string, we need to cast the value to number\n  const formattedYear = typeof year === 'string' ? +year : year;\n  return (formattedYear % 4 === 0 && formattedYear % 100 !== 0) || formattedYear % 400 === 0;\n}\n\nfunction stringMustBeValidIPv4(value: string) {\n  const re = /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n  return re.test(value);\n}\n\n/**\n * Performs a Luhn checksum.\n * Used in the computation of the SIRET and SIREN numbers.\n * See: https://en.wikipedia.org/wiki/Luhn_algorithm\n */\nconst checksumLuhn = (value: string, size: number): boolean => {\n  const check = value.replace(/ /g, '');\n  if (check.length < size) return false;\n  const parity = size % 2;\n  let sum = 0;\n  for (let i = size - 1; i >= 0; i--) {\n    let d = parseInt(check.charAt(i));\n    if (i % 2 === parity) {\n      d *= 2;\n    }\n    if (d > 9) {\n      d -= 9;\n    }\n    sum += d;\n  }\n  return sum % 10 === 0;\n};\n\n// DONT: the following 2 rules might be way too specific to be part of this lib.\n/**\n * Checks if a string is a valid SIRET number (a french legal number).\n */\nfunction stringMustBeSIRET(value: string): boolean {\n  const size = 14;\n  return checksumLuhn(value, size);\n}\n\n/**\n * Checks if a string is a valid SIREN number (a french legal number).\n */\nfunction stringMustBeSIREN(value: string): boolean {\n  const size = 9;\n  return checksumLuhn(value, size);\n}\n\n// TODO: Adapt to every country\nfunction stringMustBeZipCode (value: string) {\n  const re = /^(?:[0-8]\\d|9[0-8])\\d{3}$/;\n  return re.test(value);\n}\n\nexport {\n  mustNotBeNull,\n  mustNotBeUndefined,\n  mustNotBeNullOrUndefined,\n  arrayMustNotBeEmpty,\n  isLeapYear,\n  numberMustBeMax,\n  numberMustBeMin,\n  numberMustBeStrictlyMax,\n  numberMustBeStrictlyMin,\n  objectMustNotBeEmpty,\n  stringMustBeAtLeastNCharacters,\n  stringMustBeDifferentTo,\n  stringMustBeSIREN,\n  stringMustBeSIRET,\n  stringMustBeSimilarTo,\n  stringMustBeValidEmail,\n  stringMustBeValidIPv4,\n  stringMustContainWords,\n  stringMustNotBeEmpty,\n  stringMustBeZipCode\n};\n"],"sourceRoot":"","file":"index.js"}