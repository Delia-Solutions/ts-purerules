{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["function mustNotBeNull(value: any): boolean {\n  return value !== null;\n}\n\nfunction mustNotBeUndefined(value: any): boolean {\n  return value !== undefined;\n}\n\nfunction mustNotBeNullOrUndefined(value: any): boolean {\n  return mustNotBeNull(value) && mustNotBeUndefined(value);\n}\n\nfunction arrayMustNotBeEmpty(value: Array<any>): boolean {\n  return (Array\n    .from(value)\n    .filter(elt => elt !== undefined)\n    .length) > 0;\n}\n\nfunction stringMustBeValidEmail(value: string): boolean {\n  /* This regex comes from\n     http://emailregex.com/\n     It matches 99.99% of MODERN email addresses.\n  */\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(value);\n}\n\nfunction numberMustBeMin(value: number, minValue: number): boolean {\n  return value >= minValue;\n}\n\nfunction numberMustBeMax(value: number, maxValue: number): boolean {\n  return maxValue >= value;\n}\n\nfunction numberMustBeStrictlyMin(value: number, minValue: number): boolean {\n  return value > minValue;\n}\nfunction numberMustBeStrictlyMax(value: number, maxValue: number): boolean {\n  return maxValue > value;\n}\n\nfunction objectMustNotBeEmpty(value: any): boolean {\n  const keys = Object.keys(value);\n  return value.toString() === '[object Object]' && keys.length !== 0;\n}\n\nfunction stringMustBeAtLeastNCharacters(value: string, length: number): boolean {\n  return value.length >= length;\n}\n\nfunction stringMustBeSimilarTo(value: string, other: string): boolean {\n  return value === other;\n}\n\nfunction stringMustBeDifferentTo(value: string, other: string): boolean {\n  return value !== other;\n}\n\nfunction stringMustNotBeEmpty(value: string): boolean {\n  return value !== '';\n}\n\nfunction stringMustContainWords(value: string, words: string | Array<string>): boolean {\n  if (Array.isArray(words)) {\n    return words.every(v => value.includes(v));\n  }\n  return value.includes(words);\n}\n\nfunction isLeapYear(year: string | number): boolean {\n  // if year is a string, we need to cast the value to number\n  const formattedYear = typeof year === 'string' ? +year : year;\n  return (formattedYear % 4 === 0 && formattedYear % 100 !== 0) || formattedYear % 400 === 0;\n}\n\nfunction stringMustBeValidIPv4(value: string) {\n  const re = /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n  return re.test(value);\n}\n\n/**\n * Performs a Luhn checksum.\n * Used in the computation of the SIRET and SIREN numbers.\n * See: https://en.wikipedia.org/wiki/Luhn_algorithm\n */\nconst checksumLuhn = (value: string, size: number): boolean => {\n  const check = value.replace(/ /g, '');\n  if (check.length < size) return false;\n  const parity = size % 2;\n  let sum = 0;\n  for (let i = size - 1; i >= 0; i--) {\n    let d = parseInt(check.charAt(i));\n    if (i % 2 === parity) {\n      d *= 2;\n    }\n    if (d > 9) {\n      d -= 9;\n    }\n    sum += d;\n  }\n  return sum % 10 === 0;\n};\n\n// DONT: the following 2 rules might be way too specific to be part of this lib.\n/**\n * Checks if a string is a valid SIRET number (a french legal number).\n */\nfunction stringMustBeSIRET(value: string): boolean {\n  const size = 14;\n  return checksumLuhn(value, size);\n}\n\n/**\n * Checks if a string is a valid SIREN number (a french legal number).\n */\nfunction stringMustBeSIREN(value: string): boolean {\n  const size = 9;\n  return checksumLuhn(value, size);\n}\n\n// TODO: Adapt to every country\nfunction stringMustBeZipCode (value: string) {\n  const re = /^(?:[0-8]\\d|9[0-8])\\d{3}$/;\n  return re.test(value);\n}\n\nexport {\n  mustNotBeNull,\n  mustNotBeUndefined,\n  mustNotBeNullOrUndefined,\n  arrayMustNotBeEmpty,\n  isLeapYear,\n  numberMustBeMax,\n  numberMustBeMin,\n  numberMustBeStrictlyMax,\n  numberMustBeStrictlyMin,\n  objectMustNotBeEmpty,\n  stringMustBeAtLeastNCharacters,\n  stringMustBeDifferentTo,\n  stringMustBeSIREN,\n  stringMustBeSIRET,\n  stringMustBeSimilarTo,\n  stringMustBeValidEmail,\n  stringMustBeValidIPv4,\n  stringMustContainWords,\n  stringMustNotBeEmpty,\n  stringMustBeZipCode\n};\n"]}